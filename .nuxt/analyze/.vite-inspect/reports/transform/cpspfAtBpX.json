{
  "resolvedId": "C:/Users/user/Desktop/portfolio-mkh/node_modules/tsparticles-interaction-particles-collisions/esm/Collider.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ParticlesInteractorBase, getDistance } from \"tsparticles-engine\";\nimport { resolveCollision } from \"./ResolveCollision\";\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * 2);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n",
      "start": 1704142070120,
      "end": 1704142070201,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1704142070202,
      "end": 1704142070202,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1704142070202,
      "end": 1704142070202,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1704142070202,
      "end": 1704142070202,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1704142070202,
      "end": 1704142070202,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1704142070202,
      "end": 1704142070202,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1704142070202,
      "end": 1704142070202,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1704142070202,
      "end": 1704142070202,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1704142070202,
      "end": 1704142070202,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1704142070202,
      "end": 1704142070202,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1704142070202,
      "end": 1704142070202,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1704142070202,
      "end": 1704142070202,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1704142070202,
      "end": 1704142070202,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1704142070202,
      "end": 1704142070202,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1704142070202,
      "end": 1704142070202,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1704142070202,
      "end": 1704142070202,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1704142070202,
      "end": 1704142070202,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1704142070203,
      "end": 1704142070203,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1704142070203,
      "end": 1704142070203,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1704142070203,
      "end": 1704142070203,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1704142070203,
      "end": 1704142070203,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1704142070203,
      "end": 1704142070203,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1704142070203,
      "end": 1704142070203,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1704142070203,
      "end": 1704142070203,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1704142070203,
      "end": 1704142070203,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1704142070203,
      "end": 1704142070203,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1704142070203,
      "end": 1704142070203,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1704142070203,
      "end": 1704142070203,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1704142070203,
      "end": 1704142070203,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1704142070204,
      "end": 1704142070204,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1704142070204,
      "end": 1704142070204,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1704142070204,
      "end": 1704142070204,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1704142070204,
      "end": 1704142070204,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1704142070204,
      "end": 1704142070204,
      "order": "normal"
    }
  ]
}
